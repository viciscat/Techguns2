buildscript {
    repositories {
		mavenCentral()
		jcenter()
		maven { url = "https://maven.minecraftforge.net/" }
	}
    dependencies {
		classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.1.+"
	}
}
apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.12.2-2.0.2.0-kus-edition2"
group = "techguns" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "techguns"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

dependencies {
	minecraft "net.minecraftforge:forge:1.12.2-14.23.5.2860"
}

minecraft {
	mappings channel: "snapshot", version: "20180104-1.12"

	runs {
		"client" {
			workingDirectory file("./run")
			mods { "${project.name}" { source sourceSets.main } }
		}

		"server" {
			workingDirectory file("./run/server")
			mods { "${project.name}" { source sourceSets.main } }
		}
	}
}

repositories {
	maven {
		url 'https://repo.elytradev.com/'
	}
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "modmaven.k-4u.nl"
	}
	maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
	maven {
		url "https://cursemaven.com"
	}
	//ivy { name "com.latmod.mods"; artifactPattern "http://mods.latmod.com/[module]/[revision]/[module]-[revision](-[classifier]).[ext]" }
	maven { 
		name="Latmods"
		url "https://maven.ftb.dev/"
	}
	maven {
		name = "OpenComputers"
		url = "https://maven.cil.li/"
	}
}
dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

	//compile 'elucent:albedo:2.0-SNAPSHOT'
	//deobfCompile 'albedo:albedo:0.1.3:deobf'
	implementation fg.deobf("curse.maven:albedo-275300:2714505")

	implementation "curse.maven:crafttweaker-239197:2639477"
	
	//provided 'chisel:Chisel-MC1.12:0.0.14.18:api'
	//provided 'chisel:Chisel:MC1.12:0.0.14.18'
	
	implementation fg.deobf('curse.maven:lostcities-269024:2623319')
	
	//compile 'com.latmod.mods:FTBLib:4.2.5:api'
	//deobfCompile "com.feed_the_beast.mods:FTBLib:5.4.0.64"
	implementation fg.deobf("curse.maven:ftblib-237167:2641933")
	
	 // compile against the JEI API but do not include it at runtime
	compileOnly "mezz.jei:jei_${mc_version}:${jei_version}:api"
	// at runtime, use the full JEI jar
	runtimeOnly "mezz.jei:jei_${mc_version}:${jei_version}"

	implementation fg.deobf("li.cil.oc:OpenComputers:${openComputersVersion}")
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    //inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version//, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude 'crafttweaker_at.cfg'
    }
	
	rename '(.+_at.cfg)', 'META-INF/$1'
}


jar {
	exclude 'META-INF/crafttweaker_at.cfg'
	manifest {
		attributes 'FMLCorePlugin': "techguns.core.TechgunsFMLPlugin"
		attributes 'FMLCorePluginContainsFMLMod': "true"
	    attributes 'FMLAT': 'techguns_at.cfg'
	}
}